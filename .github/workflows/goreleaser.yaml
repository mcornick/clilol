---
jobs:
  goreleaser:
    outputs:
      hashes: ${{ steps.hash.outputs.hashes }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0
      - run: git fetch --force --tags
      - uses: actions/setup-go@v5.0.0
        with:
          cache: true
          go-version: ">=1.20.2"
      - uses: sigstore/cosign-installer@v3.4.0
        with:
          cosign-release: v2.0.0
      - uses: anchore/sbom-action/download-syft@v0.15.8
        with:
          syft-version: v0.69.0
      - id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v6.1.0
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
      - env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
        run: echo "$GPG_PRIVATE_KEY" > /home/runner/gpgkey.asc && chmod 600 /home/runner/gpgkey.asc
        shell: bash
      - uses: docker/login-action@v3.0.0
        with:
          password: ${{ secrets.GH_PAT }}
          registry: ghcr.io
          username: mcornick
      - env:
          AUR_KEY: ${{ secrets.AUR_KEY }}
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          MASTODON_ACCESS_TOKEN: ${{ secrets.MASTODON_ACCESS_TOKEN }}
          MASTODON_CLIENT_ID: ${{ secrets.MASTODON_CLIENT_ID }}
          MASTODON_CLIENT_SECRET: ${{ secrets.MASTODON_CLIENT_SECRET }}
        id: run-goreleaser
        uses: goreleaser/goreleaser-action@v5.0.0
        with:
          args: release --clean
          version: latest
      - run: rm /home/runner/gpgkey.asc
        shell: bash
      - env:
          ARTIFACTS: "${{ steps.run-goreleaser.outputs.artifacts }}"
        id: hash
        run: |
          set -euo pipefail
          hashes=$(echo $ARTIFACTS | jq --raw-output '.[] | {name, "digest": (.extra.Digest // .extra.Checksum)} | select(.digest) | {digest} + {name} | join("  ") | sub("^sha256:";"")' | base64 -w0)
          if test "$hashes" = ""; then # goreleaser < v1.13.0
            checksum_file=$(echo "$ARTIFACTS" | jq -r '.[] | select (.type=="Checksum") | .path')
            hashes=$(cat $checksum_file | base64 -w0)
          fi
          echo "hashes=$hashes" >> $GITHUB_OUTPUT
  binary-provenance:
    needs: [goreleaser]
    permissions:
      actions: read
      id-token: write
      contents: write
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.9.0
    with:
      base64-subjects: "${{ needs.goreleaser.outputs.hashes }}"
      upload-assets: true
name: goreleaser
"on":
  push:
    tags:
      - "*"
permissions:
  contents: write
  id-token: write
  issues: write
  packages: write
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
